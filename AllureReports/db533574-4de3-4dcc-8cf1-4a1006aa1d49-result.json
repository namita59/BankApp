{"name": "test_Account_Create_009[getDataForAccountCreate0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <TestCases.Test_Acc_Create.Test_Account_Create_Class object at 0x0000028C18FDF3E0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"afae73db7cc77ab2066d0a882fa8545a\")>\ngetDataForAccountCreate = ('56', 'Current Account', '115000')\n\n    def test_Account_Create_009(self,setup,getDataForAccountCreate):\n        self.log.info(\"test_Account_Create_009 is started\")\n        self.driver = setup\n        self.log.info(\"opening the browser\")\n        self.si = User_Signin_Class(self.driver)\n        self.log.info(\"Clicking on the login option\")\n        self.si.ClickOn_Login_Option()\n        self.log.info(\"Entering the Username\")\n        self.si.Enter_Username(self.Username)\n        self.log.info(\"Entering the password\")\n        self.si.Enter_Password(self.Password)\n        self.log.info(\"Clicking on the login button\")\n        self.si.CLickOn_LogIn_Button()\n        self.acc =Account_Mgmt_Create_Page(self.driver)\n        self.log.info(\"Clicking on the account mgmt \")\n        self.acc.ClickOn_Acc_Mgmt()\n        self.log.info(\"Clicking on the Create account link\")\n        self.acc.ClickOn_Create_Acc_Link()\n        self.log.info(\"Entering the Customer id\")\n        self.acc.Enter_CustID(getDataForAccountCreate[0])\n        self.log.info(\"selecting  the Account type \")\n        self.acc.DropDown_Acc_Type(getDataForAccountCreate[1])\n        self.log.info(\"Entering the balance\")\n        self.acc.Enter_Balance(getDataForAccountCreate[2])\n        self.log.info(\"Clicking on the Create account button\")\n        self.acc.ClickOn_Create_Acc_Button()\n        self.log.info(\"Validating account has been created\")\n        if self.acc.Validate_Create_Acc() ==\"Account created successfully\":\n            self.log.info(\"test_Account_Create_009 is paseed\")\n            assert True\n        else:\n            self.driver.save_screenshot(\".\\\\Screenshots\\\\test_Account_Create_009_fail.png\")\n            self.log.info(\"test_Account_Create_009 is failed\")\n>           assert False\nE           assert False\n\nTestCases\\Test_Acc_Create.py:43: AssertionError"}, "attachments": [{"name": "log", "source": "3cd9a5e0-57c4-4fb3-b933-ed52b744b368-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "3c2b0bb1-73ae-475e-b1f7-e5f134f4d3fe-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "getDataForAccountCreate", "value": "('56', 'Current Account', '115000')"}], "start": 1723337797247, "stop": 1723337804390, "uuid": "1c61aa79-a065-41b3-8cea-5343bec94df9", "historyId": "51f5059bc42c3905d4439e86f5d9cf21", "testCaseId": "ddd873722372daac0e715f1976038d6c", "fullName": "TestCases.Test_Acc_Create.Test_Account_Create_Class#test_Account_Create_009", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "Test_Acc_Create"}, {"name": "subSuite", "value": "Test_Account_Create_Class"}, {"name": "host", "value": "Namita"}, {"name": "thread", "value": "3632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.Test_Acc_Create"}]}